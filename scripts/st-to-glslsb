#! /bin/bash
#
# This script convert some shaders from Shadertoy to the GLSL Sandbox
# API. This is only working with Shadertoy shaders that are only using
# image code (mainImage()), using no texture at all.
#

# Print header
cat <<END_OF_HEADER
/*
 * Automatically converted by st-to-glslsb script from:
 * https://github.com/jolivain/glslsandbox-player
 */

#ifdef GL_ES
precision mediump float;
#endif

uniform float time;
uniform vec2 mouse;
uniform vec2 resolution;

#define iResolution get_iResolution()
#define iGlobalTime get_iGlobalTime()
#define iMouse      get_iMouse()
#define iDate       get_iDate()

vec3 get_iResolution() {
  return vec3(resolution, 0.0);
}

float get_iGlobalTime() {
  return time;
}

vec3 get_iMouse() {
  return vec3(mouse * resolution, 0.0);
}

vec4 get_iDate() {
  return vec4(0.0);
}

// Protect glslsandbox uniform names
#define time        stemu_time
#define resolution  stemu_resolution
#define mouse       stemu_mouse

// --------[ Original ShaderToy begins here ]---------- //
END_OF_HEADER

# Just pass through the Shadertoy code...
cat

# Then print the footer
cat <<END_OF_FOOTER
// --------[ Original ShaderToy ends here ]---------- //

void main(void)
{
  mainImage(gl_FragColor, gl_FragCoord.xy);
}
END_OF_FOOTER
